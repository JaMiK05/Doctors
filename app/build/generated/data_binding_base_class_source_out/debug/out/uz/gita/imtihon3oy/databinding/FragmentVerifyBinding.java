// Generated by view binder compiler. Do not edit!
package uz.gita.imtihon3oy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import uz.gita.imtihon3oy.R;

public final class FragmentVerifyBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final LinearLayout lay1;

  @NonNull
  public final LinearLayout lay2;

  @NonNull
  public final EditText number;

  @NonNull
  public final EditText password;

  @NonNull
  public final LinearLayout phoneAndPassword;

  @NonNull
  public final AppCompatButton sendBtn;

  @NonNull
  public final TextView txt;

  private FragmentVerifyBinding(@NonNull FrameLayout rootView, @NonNull ImageView imageView2,
      @NonNull LinearLayout lay1, @NonNull LinearLayout lay2, @NonNull EditText number,
      @NonNull EditText password, @NonNull LinearLayout phoneAndPassword,
      @NonNull AppCompatButton sendBtn, @NonNull TextView txt) {
    this.rootView = rootView;
    this.imageView2 = imageView2;
    this.lay1 = lay1;
    this.lay2 = lay2;
    this.number = number;
    this.password = password;
    this.phoneAndPassword = phoneAndPassword;
    this.sendBtn = sendBtn;
    this.txt = txt;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVerifyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVerifyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_verify, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVerifyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.lay1;
      LinearLayout lay1 = ViewBindings.findChildViewById(rootView, id);
      if (lay1 == null) {
        break missingId;
      }

      id = R.id.lay2;
      LinearLayout lay2 = ViewBindings.findChildViewById(rootView, id);
      if (lay2 == null) {
        break missingId;
      }

      id = R.id.number;
      EditText number = ViewBindings.findChildViewById(rootView, id);
      if (number == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.phoneAndPassword;
      LinearLayout phoneAndPassword = ViewBindings.findChildViewById(rootView, id);
      if (phoneAndPassword == null) {
        break missingId;
      }

      id = R.id.sendBtn;
      AppCompatButton sendBtn = ViewBindings.findChildViewById(rootView, id);
      if (sendBtn == null) {
        break missingId;
      }

      id = R.id.txt;
      TextView txt = ViewBindings.findChildViewById(rootView, id);
      if (txt == null) {
        break missingId;
      }

      return new FragmentVerifyBinding((FrameLayout) rootView, imageView2, lay1, lay2, number,
          password, phoneAndPassword, sendBtn, txt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
